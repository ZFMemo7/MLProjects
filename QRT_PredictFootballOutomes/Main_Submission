{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0271094b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-03T09:01:05.918991Z",
     "iopub.status.busy": "2023-12-03T09:01:05.918796Z",
     "iopub.status.idle": "2023-12-03T09:01:07.725180Z",
     "shell.execute_reply": "2023-12-03T09:01:07.723966Z",
     "shell.execute_reply.started": "2023-12-03T09:01:05.918976Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from tqdm import tqdm\n",
    "from sklearn import model_selection\n",
    "from sklearn.metrics import accuracy_score\n",
    "import xgboost as xgb\n",
    "import warnings\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81774830",
   "metadata": {},
   "source": [
    "## Data Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6aee6b65-07fa-442e-b0b3-4328ef3007e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-03T08:49:06.618707Z",
     "iopub.status.busy": "2023-12-03T08:49:06.618608Z",
     "iopub.status.idle": "2023-12-03T08:49:06.882305Z",
     "shell.execute_reply": "2023-12-03T08:49:06.881730Z",
     "shell.execute_reply.started": "2023-12-03T08:49:06.618696Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "train_home_team_statistics_df = pd.read_csv('./datas_final/train_home_team_statistics_df.csv', index_col=0)\n",
    "train_away_team_statistics_df = pd.read_csv('./datas_final/train_away_team_statistics_df.csv', index_col=0)\n",
    "\n",
    "train_scores = pd.read_csv('./datas_final/Y_train.csv', index_col=0)\n",
    "\n",
    "train_home = train_home_team_statistics_df.iloc[:,2:]\n",
    "train_away = train_away_team_statistics_df.iloc[:,2:]\n",
    "\n",
    "train_home.columns = 'HOME_' + train_home.columns # rename columns to include Home or Away\n",
    "train_away.columns = 'AWAY_' + train_away.columns # look above\n",
    "\n",
    "train_data =  pd.concat([train_home,train_away],join='inner',axis=1) # concatente home and away statistics\n",
    "train_scores = train_scores.loc[train_data.index]\n",
    "\n",
    "#train_data = train_data.replace({np.inf:np.nan,-np.inf:np.nan}) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7deee36c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# train_data fill all nan data with the mean\n",
    "train_data = train_data.fillna(train_data.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8b44f5a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>HOME_TEAM_SHOTS_TOTAL_season_sum</th>\n",
       "      <th>HOME_TEAM_SHOTS_INSIDEBOX_season_sum</th>\n",
       "      <th>HOME_TEAM_SHOTS_OFF_TARGET_season_sum</th>\n",
       "      <th>HOME_TEAM_SHOTS_ON_TARGET_season_sum</th>\n",
       "      <th>HOME_TEAM_SHOTS_OUTSIDEBOX_season_sum</th>\n",
       "      <th>HOME_TEAM_PASSES_season_sum</th>\n",
       "      <th>HOME_TEAM_SUCCESSFUL_PASSES_season_sum</th>\n",
       "      <th>HOME_TEAM_SAVES_season_sum</th>\n",
       "      <th>HOME_TEAM_CORNERS_season_sum</th>\n",
       "      <th>HOME_TEAM_FOULS_season_sum</th>\n",
       "      <th>...</th>\n",
       "      <th>AWAY_TEAM_YELLOWCARDS_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_REDCARDS_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_OFFSIDES_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_ATTACKS_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_PENALTIES_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_SUBSTITUTIONS_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_BALL_SAFE_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_DANGEROUS_ATTACKS_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_INJURIES_5_last_match_std</th>\n",
       "      <th>AWAY_TEAM_GOALS_5_last_match_std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>...</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>...</td>\n",
       "      <td>6.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.886207</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 280 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    HOME_TEAM_SHOTS_TOTAL_season_sum  HOME_TEAM_SHOTS_INSIDEBOX_season_sum  \\\n",
       "ID                                                                           \n",
       "0                                3.0                                   2.0   \n",
       "1                                6.0                                   8.0   \n",
       "2                                4.0                                   2.0   \n",
       "3                                7.0                                   5.0   \n",
       "4                                3.0                                   3.0   \n",
       "\n",
       "    HOME_TEAM_SHOTS_OFF_TARGET_season_sum  \\\n",
       "ID                                          \n",
       "0                                     5.0   \n",
       "1                                     3.0   \n",
       "2                                     5.0   \n",
       "3                                     5.0   \n",
       "4                                     2.0   \n",
       "\n",
       "    HOME_TEAM_SHOTS_ON_TARGET_season_sum  \\\n",
       "ID                                         \n",
       "0                                    2.0   \n",
       "1                                    6.0   \n",
       "2                                    2.0   \n",
       "3                                    6.0   \n",
       "4                                    3.0   \n",
       "\n",
       "    HOME_TEAM_SHOTS_OUTSIDEBOX_season_sum  HOME_TEAM_PASSES_season_sum  \\\n",
       "ID                                                                       \n",
       "0                                     1.0                          2.0   \n",
       "1                                     5.0                          8.0   \n",
       "2                                     8.0                          1.0   \n",
       "3                                     6.0                          9.0   \n",
       "4                                     4.0                          4.0   \n",
       "\n",
       "    HOME_TEAM_SUCCESSFUL_PASSES_season_sum  HOME_TEAM_SAVES_season_sum  \\\n",
       "ID                                                                       \n",
       "0                                      2.0                         5.0   \n",
       "1                                      7.0                        10.0   \n",
       "2                                      1.0                         2.0   \n",
       "3                                      9.0                         2.0   \n",
       "4                                      3.0                         4.0   \n",
       "\n",
       "    HOME_TEAM_CORNERS_season_sum  HOME_TEAM_FOULS_season_sum  ...  \\\n",
       "ID                                                            ...   \n",
       "0                            3.0                         6.0  ...   \n",
       "1                            6.0                         8.0  ...   \n",
       "2                            2.0                         7.0  ...   \n",
       "3                            2.0                         0.0  ...   \n",
       "4                            4.0                         7.0  ...   \n",
       "\n",
       "    AWAY_TEAM_YELLOWCARDS_5_last_match_std  \\\n",
       "ID                                           \n",
       "0                                      5.0   \n",
       "1                                      0.0   \n",
       "2                                      6.0   \n",
       "3                                      0.0   \n",
       "4                                      1.0   \n",
       "\n",
       "    AWAY_TEAM_REDCARDS_5_last_match_std  AWAY_TEAM_OFFSIDES_5_last_match_std  \\\n",
       "ID                                                                             \n",
       "0                                   5.0                                  4.0   \n",
       "1                                   0.0                                  3.0   \n",
       "2                                  10.0                                  4.0   \n",
       "3                                   0.0                                  1.0   \n",
       "4                                   0.0                                  4.0   \n",
       "\n",
       "    AWAY_TEAM_ATTACKS_5_last_match_std  AWAY_TEAM_PENALTIES_5_last_match_std  \\\n",
       "ID                                                                             \n",
       "0                                  0.0                                   6.0   \n",
       "1                                  1.0                                   8.0   \n",
       "2                                  4.0                                   0.0   \n",
       "3                                  2.0                                   0.0   \n",
       "4                                  4.0                                   9.0   \n",
       "\n",
       "    AWAY_TEAM_SUBSTITUTIONS_5_last_match_std  \\\n",
       "ID                                             \n",
       "0                                        8.0   \n",
       "1                                        4.0   \n",
       "2                                        8.0   \n",
       "3                                        5.0   \n",
       "4                                        4.0   \n",
       "\n",
       "    AWAY_TEAM_BALL_SAFE_5_last_match_std  \\\n",
       "ID                                         \n",
       "0                                    4.0   \n",
       "1                                   10.0   \n",
       "2                                    3.0   \n",
       "3                                    6.0   \n",
       "4                                    1.0   \n",
       "\n",
       "    AWAY_TEAM_DANGEROUS_ATTACKS_5_last_match_std  \\\n",
       "ID                                                 \n",
       "0                                            3.0   \n",
       "1                                            0.0   \n",
       "2                                            0.0   \n",
       "3                                            3.0   \n",
       "4                                            4.0   \n",
       "\n",
       "    AWAY_TEAM_INJURIES_5_last_match_std  AWAY_TEAM_GOALS_5_last_match_std  \n",
       "ID                                                                         \n",
       "0                              2.000000                               3.0  \n",
       "1                              5.000000                               3.0  \n",
       "2                              9.000000                               6.0  \n",
       "3                              3.886207                               2.0  \n",
       "4                              6.000000                               5.0  \n",
       "\n",
       "[5 rows x 280 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7dd2c9d3-9a89-43b6-a746-5101de68f83b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-03T08:49:31.027863Z",
     "iopub.status.busy": "2023-12-03T08:49:31.027660Z",
     "iopub.status.idle": "2023-12-03T08:49:31.043849Z",
     "shell.execute_reply": "2023-12-03T08:49:31.043086Z",
     "shell.execute_reply.started": "2023-12-03T08:49:31.027846Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LEAGUE</th>\n",
       "      <th>TEAM_NAME</th>\n",
       "      <th>TEAM_SHOTS_TOTAL_season_sum</th>\n",
       "      <th>TEAM_SHOTS_INSIDEBOX_season_sum</th>\n",
       "      <th>TEAM_SHOTS_OFF_TARGET_season_sum</th>\n",
       "      <th>TEAM_SHOTS_ON_TARGET_season_sum</th>\n",
       "      <th>TEAM_SHOTS_OUTSIDEBOX_season_sum</th>\n",
       "      <th>TEAM_PASSES_season_sum</th>\n",
       "      <th>TEAM_SUCCESSFUL_PASSES_season_sum</th>\n",
       "      <th>TEAM_SAVES_season_sum</th>\n",
       "      <th>...</th>\n",
       "      <th>TEAM_YELLOWCARDS_5_last_match_std</th>\n",
       "      <th>TEAM_REDCARDS_5_last_match_std</th>\n",
       "      <th>TEAM_OFFSIDES_5_last_match_std</th>\n",
       "      <th>TEAM_ATTACKS_5_last_match_std</th>\n",
       "      <th>TEAM_PENALTIES_5_last_match_std</th>\n",
       "      <th>TEAM_SUBSTITUTIONS_5_last_match_std</th>\n",
       "      <th>TEAM_BALL_SAFE_5_last_match_std</th>\n",
       "      <th>TEAM_DANGEROUS_ATTACKS_5_last_match_std</th>\n",
       "      <th>TEAM_INJURIES_5_last_match_std</th>\n",
       "      <th>TEAM_GOALS_5_last_match_std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Ligue 1</td>\n",
       "      <td>Toulouse</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ligue 2</td>\n",
       "      <td>Brest</td>\n",
       "      <td>6.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Serie A</td>\n",
       "      <td>Sampdoria</td>\n",
       "      <td>4.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>League One</td>\n",
       "      <td>Coventry City</td>\n",
       "      <td>7.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>...</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Premier League</td>\n",
       "      <td>Wolverhampton Wanderers</td>\n",
       "      <td>3.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 142 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            LEAGUE                TEAM_NAME  TEAM_SHOTS_TOTAL_season_sum  \\\n",
       "ID                                                                         \n",
       "0          Ligue 1                 Toulouse                          3.0   \n",
       "1          Ligue 2                    Brest                          6.0   \n",
       "2          Serie A                Sampdoria                          4.0   \n",
       "3       League One            Coventry City                          7.0   \n",
       "4   Premier League  Wolverhampton Wanderers                          3.0   \n",
       "\n",
       "    TEAM_SHOTS_INSIDEBOX_season_sum  TEAM_SHOTS_OFF_TARGET_season_sum  \\\n",
       "ID                                                                      \n",
       "0                               2.0                               5.0   \n",
       "1                               8.0                               3.0   \n",
       "2                               2.0                               5.0   \n",
       "3                               5.0                               5.0   \n",
       "4                               3.0                               2.0   \n",
       "\n",
       "    TEAM_SHOTS_ON_TARGET_season_sum  TEAM_SHOTS_OUTSIDEBOX_season_sum  \\\n",
       "ID                                                                      \n",
       "0                               2.0                               1.0   \n",
       "1                               6.0                               5.0   \n",
       "2                               2.0                               8.0   \n",
       "3                               6.0                               6.0   \n",
       "4                               3.0                               4.0   \n",
       "\n",
       "    TEAM_PASSES_season_sum  TEAM_SUCCESSFUL_PASSES_season_sum  \\\n",
       "ID                                                              \n",
       "0                      2.0                                2.0   \n",
       "1                      8.0                                7.0   \n",
       "2                      1.0                                1.0   \n",
       "3                      9.0                                9.0   \n",
       "4                      4.0                                3.0   \n",
       "\n",
       "    TEAM_SAVES_season_sum  ...  TEAM_YELLOWCARDS_5_last_match_std  \\\n",
       "ID                         ...                                      \n",
       "0                     5.0  ...                                3.0   \n",
       "1                    10.0  ...                                4.0   \n",
       "2                     2.0  ...                                4.0   \n",
       "3                     2.0  ...                                4.0   \n",
       "4                     4.0  ...                                1.0   \n",
       "\n",
       "    TEAM_REDCARDS_5_last_match_std  TEAM_OFFSIDES_5_last_match_std  \\\n",
       "ID                                                                   \n",
       "0                              0.0                             6.0   \n",
       "1                              0.0                             4.0   \n",
       "2                              5.0                             6.0   \n",
       "3                              0.0                             1.0   \n",
       "4                              0.0                             2.0   \n",
       "\n",
       "    TEAM_ATTACKS_5_last_match_std  TEAM_PENALTIES_5_last_match_std  \\\n",
       "ID                                                                   \n",
       "0                             0.0                             10.0   \n",
       "1                             3.0                             10.0   \n",
       "2                             3.0                              6.0   \n",
       "3                             8.0                              8.0   \n",
       "4                             5.0                              8.0   \n",
       "\n",
       "    TEAM_SUBSTITUTIONS_5_last_match_std  TEAM_BALL_SAFE_5_last_match_std  \\\n",
       "ID                                                                         \n",
       "0                                   8.0                              7.0   \n",
       "1                                   0.0                              1.0   \n",
       "2                                   7.0                              2.0   \n",
       "3                                   5.0                              5.0   \n",
       "4                                   7.0                              2.0   \n",
       "\n",
       "    TEAM_DANGEROUS_ATTACKS_5_last_match_std  TEAM_INJURIES_5_last_match_std  \\\n",
       "ID                                                                            \n",
       "0                                       2.0                             4.0   \n",
       "1                                       2.0                             8.0   \n",
       "2                                       3.0                             2.0   \n",
       "3                                       5.0                             NaN   \n",
       "4                                       6.0                             4.0   \n",
       "\n",
       "    TEAM_GOALS_5_last_match_std  \n",
       "ID                               \n",
       "0                           3.0  \n",
       "1                           4.0  \n",
       "2                           4.0  \n",
       "3                           6.0  \n",
       "4                           4.0  \n",
       "\n",
       "[5 rows x 142 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_home_team_statistics_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "515a4e90-c970-49e4-901c-44bd58c50357",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-03T08:49:14.914136Z",
     "iopub.status.busy": "2023-12-03T08:49:14.913960Z",
     "iopub.status.idle": "2023-12-03T08:49:14.920714Z",
     "shell.execute_reply": "2023-12-03T08:49:14.919761Z",
     "shell.execute_reply.started": "2023-12-03T08:49:14.914120Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>HOME_WINS</th>\n",
       "      <th>DRAW</th>\n",
       "      <th>AWAY_WINS</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    HOME_WINS  DRAW  AWAY_WINS\n",
       "ID                            \n",
       "0           0     0          1\n",
       "1           0     1          0\n",
       "2           0     0          1\n",
       "3           1     0          0\n",
       "4           0     1          0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_scores.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72068e90-b2e3-41cf-b5de-41b86dd1c1cc",
   "metadata": {},
   "source": [
    "## Benchmark\n",
    "\n",
    "We try to model if AWAY wins"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f70e78bf-729c-4782-8c69-fefcc3febea9",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_new_y = train_scores['AWAY_WINS'] # second benchmark to test if the AWAY team wins"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73acde0c",
   "metadata": {},
   "source": [
    "### train, valid test split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "702356a1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-03T08:59:14.353015Z",
     "iopub.status.busy": "2023-12-03T08:59:14.352825Z",
     "iopub.status.idle": "2023-12-03T08:59:14.376440Z",
     "shell.execute_reply": "2023-12-03T08:59:14.375834Z",
     "shell.execute_reply.started": "2023-12-03T08:59:14.353001Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# trains the model for the AWAY team as it uses train_new_y\n",
    "X_train, X_test, y_train, y_test = model_selection.train_test_split(train_data, train_new_y, train_size=0.8, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d4697f6",
   "metadata": {},
   "source": [
    "### Model 2 AdaBoost for ensemble learning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4b989a96",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import AdaBoostClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "import optuna\n",
    "from optuna.samplers import TPESampler\n",
    "import pickle\n",
    "\n",
    "\n",
    "def objective(trial):\n",
    "    n_estimators = trial.suggest_int('n_estimators', 50, 500)\n",
    "    learning_rate = trial.suggest_loguniform('learning_rate', 1e-5, 1)\n",
    "    model = AdaBoostClassifier(n_estimators=n_estimators, learning_rate=learning_rate)\n",
    "    model.fit(X_train, y_train)\n",
    "    y_pred = model.predict(X_test)\n",
    "    return accuracy_score(y_test, y_pred) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e839cca5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[I 2024-02-28 04:18:56,796] A new study created in memory with name: no-name-d3e6a7c2-cee3-4349-b961-a5db4d5dd49a\n",
      "[I 2024-02-28 04:19:17,224] Trial 0 finished with value: 0.7029662738724096 and parameters: {'n_estimators': 218, 'learning_rate': 0.566984951147885}. Best is trial 0 with value: 0.7029662738724096.\n",
      "[I 2024-02-28 04:19:49,490] Trial 1 finished with value: 0.6956521739130435 and parameters: {'n_estimators': 380, 'learning_rate': 0.009846738873614562}. Best is trial 0 with value: 0.7029662738724096.\n",
      "[I 2024-02-28 04:19:59,259] Trial 2 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 120, 'learning_rate': 6.025215736203858e-05}. Best is trial 0 with value: 0.7029662738724096.\n",
      "[I 2024-02-28 04:20:05,101] Trial 3 finished with value: 0.7074360016253556 and parameters: {'n_estimators': 76, 'learning_rate': 0.21423021757741043}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:20:32,392] Trial 4 finished with value: 0.7070296627387241 and parameters: {'n_estimators': 321, 'learning_rate': 0.034702669886504146}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:20:38,168] Trial 5 finished with value: 0.699715562779358 and parameters: {'n_estimators': 59, 'learning_rate': 0.7072114131472232}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:21:17,508] Trial 6 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 425, 'learning_rate': 0.00011526449540315612}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:21:29,683] Trial 7 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 132, 'learning_rate': 8.260808399079601e-05}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:21:46,749] Trial 8 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 187, 'learning_rate': 0.00420515645091387}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:22:08,109] Trial 9 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 244, 'learning_rate': 0.0002858549394196192}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:22:53,069] Trial 10 finished with value: 0.7066233238520927 and parameters: {'n_estimators': 476, 'learning_rate': 0.07685124891284596}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:23:24,581] Trial 11 finished with value: 0.7074360016253556 and parameters: {'n_estimators': 316, 'learning_rate': 0.06232617737733313}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:23:55,511] Trial 12 finished with value: 0.7066233238520927 and parameters: {'n_estimators': 311, 'learning_rate': 0.10256503696905535}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:24:29,296] Trial 13 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 353, 'learning_rate': 0.0009167785859319853}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:24:53,645] Trial 14 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 273, 'learning_rate': 1.163814228102761e-05}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:25:07,750] Trial 15 finished with value: 0.7062169849654611 and parameters: {'n_estimators': 164, 'learning_rate': 0.223328299892227}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:25:13,808] Trial 16 finished with value: 0.6919951239333604 and parameters: {'n_estimators': 60, 'learning_rate': 0.014268319748984869}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:25:51,838] Trial 17 finished with value: 0.7066233238520927 and parameters: {'n_estimators': 407, 'learning_rate': 0.026998480954771198}. Best is trial 3 with value: 0.7074360016253556.\n",
      "[I 2024-02-28 04:26:33,620] Trial 18 finished with value: 0.707842340511987 and parameters: {'n_estimators': 487, 'learning_rate': 0.15306575950805207}. Best is trial 18 with value: 0.707842340511987.\n",
      "[I 2024-02-28 04:27:15,566] Trial 19 finished with value: 0.7054043071921983 and parameters: {'n_estimators': 473, 'learning_rate': 0.2465720191685548}. Best is trial 18 with value: 0.707842340511987.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of finished trials:  20\n",
      "Best trial:\n",
      "Value:  0.707842340511987\n",
      "Params:  {'n_estimators': 487, 'learning_rate': 0.15306575950805207}\n"
     ]
    }
   ],
   "source": [
    "# optuna sampler, NEED to add early stopping\n",
    "sampler = TPESampler(seed=42)\n",
    "study = optuna.create_study(direction='maximize', sampler=sampler) # maximize model's accuracy\n",
    "study.optimize(objective, n_trials=20)\n",
    "\n",
    "print('Number of finished trials: ', len(study.trials))\n",
    "print('Best trial:')\n",
    "trial = study.best_trial\n",
    "print('Value: ', trial.value)\n",
    "print('Params: ', trial.params)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "cf50cdb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7066"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# retraining\n",
    "parameters = {\n",
    "    'n_estimators': 487,\n",
    "    'learning_rate': 0.15306575950805207,\n",
    "    'algorithm': 'SAMME'\n",
    "    }\n",
    "ada_optimized = AdaBoostClassifier(**parameters)\n",
    "ada_optimized.fit(X_train, y_train)\n",
    "predictions_Away = ada_optimized.predict(X_test)\n",
    "np.round(accuracy_score(predictions_Away, y_test),4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0afc795a-5be0-40ae-82e3-03cdfdebb9ec",
   "metadata": {},
   "source": [
    "## Submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "f4213dad-d1e4-43e0-b550-6c45f7c191e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-12-03T09:15:39.460534Z",
     "iopub.status.busy": "2023-12-03T09:15:39.460345Z",
     "iopub.status.idle": "2023-12-03T09:15:39.803528Z",
     "shell.execute_reply": "2023-12-03T09:15:39.802034Z",
     "shell.execute_reply.started": "2023-12-03T09:15:39.460520Z"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "test_home = pd.read_csv('./datas_final/test_home_team_statistics_df.csv', index_col=0)\n",
    "test_away = pd.read_csv('./datas_final/test_away_team_statistics_df.csv', index_col=0)\n",
    "\n",
    "test_home.columns = 'HOME_' + test_home.columns\n",
    "test_away.columns = 'AWAY_' + test_away.columns\n",
    "\n",
    "test_data =  pd.concat([test_home,test_away],join='inner',axis=1)\n",
    "\n",
    "test_data = test_data.fillna(test_data.mean())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "8b62f74d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(25368, 1)"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# to csv for ada_optimized\n",
    "final_Away = ada_optimized.predict(test_data)\n",
    "\n",
    "final_Away = pd.DataFrame(final_Away)\n",
    "final_Home = pd.DataFrame(final_Home)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "0b12f8a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_Away.columns = ['AWAY_WINS']\n",
    "final_Home.columns = ['HOME_WINS']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "d238f460",
   "metadata": {},
   "outputs": [],
   "source": [
    "#concatenate the predictions\n",
    "final_submission = pd.concat([final_Away,final_Home], axis=1)\n",
    "final_submission['DRAW'] = 0\n",
    "\n",
    "# if home and away are the same, then draw will be 1\n",
    "final_submission.loc[final_submission['HOME_WINS'] == final_submission['AWAY_WINS'], 'DRAW'] = 1\n",
    "\n",
    "# if home and away are the same, then both will be turned to 0 at the same time\n",
    "final_submission.loc[final_submission['DRAW'] == 1, 'HOME_WINS'] = 0\n",
    "final_submission.loc[final_submission['DRAW'] == 1, 'AWAY_WINS'] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6f138553",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_submission = final_submission[['HOME_WINS', 'DRAW', 'AWAY_WINS']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5a04ccff",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "final_submission.index = test_data.index\n",
    "submission = final_submission.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "c25f7720",
   "metadata": {},
   "outputs": [],
   "source": [
    "submission.to_csv('./datas_final/Ada_transformed.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
